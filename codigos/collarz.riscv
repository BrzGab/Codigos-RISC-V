.data 
msg_invalida: .asciz "entrada invalida.\n"

.text
.globl _start    
_start:        
    li a7, 5
    ecall
    mv t0, a0
    
    # verifica se Ã© menor ou igual a 1
    li t1, 1
    ble t0, t1, entrada_invalida
    
    # inicializa contador
    li t2, 0
    
loop_collatz:
    # verifica se chegou em 1
    li t1, 1
    beq t0, t1, imprime_resultado
    
    # incrementa contador
    addi t2, t2, 1
    
    andi t3, t0, 1
    beqz t3, eh_par
    
eh_impar:
    li t3, 3
    mul t0, t0, t3
    addi t0, t0, 1
    j loop_collatz
    
eh_par:
    srli t0, t0, 1   
    j loop_collatz
    
imprime_resultado:
    mv a0, t2
    li a7, 1
    ecall
    
    li a0, 10
    li a7, 11
    ecall
    
    j fim_programa
    
entrada_invalida:
    la a0, msg_invalida
    li a7, 4
    ecall
    
fim_programa:
    li a7, 10
    ecall